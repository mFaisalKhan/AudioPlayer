#############################################################################
# Makefile for building: QTGui
# Generated by qmake (2.01a) (Qt 4.7.4) on: Thu Oct 4 19:06:47 2012
# Project:  QTGui.pro
# Template: app
# Command: /opt/QtSDK/Desktop/Qt/474/gcc/bin/qmake -spec /opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/linux-g++ CONFIG+=debug -o Makefile QTGui.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_GUI_LIB -DQT_CORE_LIB
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/linux-g++ -I. -I/opt/QtSDK/Desktop/Qt/474/gcc/include/QtCore -I/opt/QtSDK/Desktop/Qt/474/gcc/include/QtGui -I/opt/QtSDK/Desktop/Qt/474/gcc/include -I. -I.
LINK          = g++
LFLAGS        = -Wl,-rpath,/opt/QtSDK/Desktop/Qt/474/gcc/lib
LIBS          = $(SUBLIBS)  -L/opt/QtSDK/Desktop/Qt/474/gcc/lib -L/usr/lib/x86_64-linux-gnu/ -lasound -lmad -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /opt/QtSDK/Desktop/Qt/474/gcc/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = GUI/mainwindow.cpp \
		Main/main.cpp \
		Main/Factory.cpp \
		AudioPlayer/ALSAWrapper/ALSAWrapper.cpp \
		AudioPlayer/DeviceInfo.cpp \
		AudioPlayer/AudioPlayer.cpp \
		AudioPlayer/AudioFormats/Mp3Decoder.cpp \
		AudioPlayer/FormatRecognizer.cpp \
		AudioPlayer/DecoderBase.cpp \
		AudioPlayer/WaveReader.cpp \
		AudioPlayer/MP3Reader.cpp moc_mainwindow.cpp \
		moc_DeviceInfo.cpp \
		moc_AudioPlayer.cpp \
		moc_Factory.cpp \
		moc_ALSAWrapper.cpp \
		moc_DecoderBase.cpp
OBJECTS       = mainwindow.o \
		main.o \
		Factory.o \
		ALSAWrapper.o \
		DeviceInfo.o \
		AudioPlayer.o \
		Mp3Decoder.o \
		FormatRecognizer.o \
		DecoderBase.o \
		WaveReader.o \
		MP3Reader.o \
		moc_mainwindow.o \
		moc_DeviceInfo.o \
		moc_AudioPlayer.o \
		moc_Factory.o \
		moc_ALSAWrapper.o \
		moc_DecoderBase.o
DIST          = /opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/common/g++.conf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/common/unix.conf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/common/linux.conf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/qconfig.pri \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/modules/qt_webkit_version.pri \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/qt_functions.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/qt_config.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/exclusive_builds.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/default_pre.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/debug.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/default_post.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/warn_on.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/qt.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/unix/thread.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/moc.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/resources.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/uic.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/yacc.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/lex.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/include_source_dir.prf \
		QTGui.pro
QMAKE_TARGET  = QTGui
DESTDIR       = 
TARGET        = QTGui

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_mainwindow.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: QTGui.pro  /opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/linux-g++/qmake.conf /opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/common/g++.conf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/common/unix.conf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/common/linux.conf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/qconfig.pri \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/modules/qt_webkit_version.pri \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/qt_functions.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/qt_config.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/exclusive_builds.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/default_pre.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/debug.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/default_post.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/warn_on.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/qt.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/unix/thread.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/moc.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/resources.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/uic.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/yacc.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/lex.prf \
		/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/include_source_dir.prf
	$(QMAKE) -spec /opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/linux-g++ CONFIG+=debug -o Makefile QTGui.pro
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/common/g++.conf:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/common/unix.conf:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/common/linux.conf:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/qconfig.pri:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/modules/qt_webkit_version.pri:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/qt_functions.prf:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/qt_config.prf:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/exclusive_builds.prf:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/default_pre.prf:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/debug.prf:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/default_post.prf:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/warn_on.prf:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/qt.prf:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/unix/thread.prf:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/moc.prf:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/resources.prf:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/uic.prf:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/yacc.prf:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/lex.prf:
/opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/features/include_source_dir.prf:
qmake:  FORCE
	@$(QMAKE) -spec /opt/QtSDK/Desktop/Qt/474/gcc/mkspecs/linux-g++ CONFIG+=debug -o Makefile QTGui.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/QTGui1.0.0 || $(MKDIR) .tmp/QTGui1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/QTGui1.0.0/ && $(COPY_FILE) --parents GUI/mainwindow.h AudioPlayer/DeviceInfo.h AudioPlayer/AudioPlayer.h Main/Factory.h AudioPlayer/ALSAWrapper/ALSAWrapper.h AudioPlayer/FormatRecognizer.h AudioPlayer/AudioFormats/DecoderBase.h AudioPlayer/AudioFormats/Mp3Decoder.h AudioPlayer/IFFileFormat.h AudioPlayer/MP3Reader.h AudioPlayer/WaveReader.h .tmp/QTGui1.0.0/ && $(COPY_FILE) --parents GUI/mainwindow.cpp Main/main.cpp Main/Factory.cpp AudioPlayer/ALSAWrapper/ALSAWrapper.cpp AudioPlayer/DeviceInfo.cpp AudioPlayer/AudioPlayer.cpp AudioPlayer/AudioFormats/Mp3Decoder.cpp AudioPlayer/FormatRecognizer.cpp AudioPlayer/DecoderBase.cpp AudioPlayer/WaveReader.cpp AudioPlayer/MP3Reader.cpp .tmp/QTGui1.0.0/ && $(COPY_FILE) --parents GUI/mainwindow.ui .tmp/QTGui1.0.0/ && (cd `dirname .tmp/QTGui1.0.0` && $(TAR) QTGui1.0.0.tar QTGui1.0.0 && $(COMPRESS) QTGui1.0.0.tar) && $(MOVE) `dirname .tmp/QTGui1.0.0`/QTGui1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/QTGui1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp moc_DeviceInfo.cpp moc_AudioPlayer.cpp moc_Factory.cpp moc_ALSAWrapper.cpp moc_DecoderBase.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp moc_DeviceInfo.cpp moc_AudioPlayer.cpp moc_Factory.cpp moc_ALSAWrapper.cpp moc_DecoderBase.cpp
moc_mainwindow.cpp: GUI/mainwindow.h
	/opt/QtSDK/Desktop/Qt/474/gcc/bin/moc $(DEFINES) $(INCPATH) GUI/mainwindow.h -o moc_mainwindow.cpp

moc_DeviceInfo.cpp: AudioPlayer/ALSAWrapper/ALSAWrapper.h \
		AudioPlayer/WaveReader.h \
		AudioPlayer/IFFileFormat.h \
		AudioPlayer/DeviceInfo.h
	/opt/QtSDK/Desktop/Qt/474/gcc/bin/moc $(DEFINES) $(INCPATH) AudioPlayer/DeviceInfo.h -o moc_DeviceInfo.cpp

moc_AudioPlayer.cpp: GUI/mainwindow.h \
		AudioPlayer/ALSAWrapper/ALSAWrapper.h \
		AudioPlayer/WaveReader.h \
		AudioPlayer/IFFileFormat.h \
		AudioPlayer/AudioFormats/DecoderBase.h \
		AudioPlayer/AudioPlayer.h
	/opt/QtSDK/Desktop/Qt/474/gcc/bin/moc $(DEFINES) $(INCPATH) AudioPlayer/AudioPlayer.h -o moc_AudioPlayer.cpp

moc_Factory.cpp: GUI/mainwindow.h \
		AudioPlayer/AudioPlayer.h \
		AudioPlayer/ALSAWrapper/ALSAWrapper.h \
		AudioPlayer/WaveReader.h \
		AudioPlayer/IFFileFormat.h \
		AudioPlayer/AudioFormats/DecoderBase.h \
		AudioPlayer/DeviceInfo.h \
		Main/Factory.h
	/opt/QtSDK/Desktop/Qt/474/gcc/bin/moc $(DEFINES) $(INCPATH) Main/Factory.h -o moc_Factory.cpp

moc_ALSAWrapper.cpp: AudioPlayer/WaveReader.h \
		AudioPlayer/IFFileFormat.h \
		AudioPlayer/ALSAWrapper/ALSAWrapper.h
	/opt/QtSDK/Desktop/Qt/474/gcc/bin/moc $(DEFINES) $(INCPATH) AudioPlayer/ALSAWrapper/ALSAWrapper.h -o moc_ALSAWrapper.cpp

moc_DecoderBase.cpp: AudioPlayer/AudioFormats/DecoderBase.h
	/opt/QtSDK/Desktop/Qt/474/gcc/bin/moc $(DEFINES) $(INCPATH) AudioPlayer/AudioFormats/DecoderBase.h -o moc_DecoderBase.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h
ui_mainwindow.h: GUI/mainwindow.ui
	/opt/QtSDK/Desktop/Qt/474/gcc/bin/uic GUI/mainwindow.ui -o ui_mainwindow.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

mainwindow.o: GUI/mainwindow.cpp GUI/mainwindow.h \
		Project-Build/ui_mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o GUI/mainwindow.cpp

main.o: Main/main.cpp Main/Factory.h \
		GUI/mainwindow.h \
		AudioPlayer/AudioPlayer.h \
		AudioPlayer/ALSAWrapper/ALSAWrapper.h \
		AudioPlayer/WaveReader.h \
		AudioPlayer/IFFileFormat.h \
		AudioPlayer/AudioFormats/DecoderBase.h \
		AudioPlayer/DeviceInfo.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o Main/main.cpp

Factory.o: Main/Factory.cpp Main/Factory.h \
		GUI/mainwindow.h \
		AudioPlayer/AudioPlayer.h \
		AudioPlayer/ALSAWrapper/ALSAWrapper.h \
		AudioPlayer/WaveReader.h \
		AudioPlayer/IFFileFormat.h \
		AudioPlayer/AudioFormats/DecoderBase.h \
		AudioPlayer/DeviceInfo.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Factory.o Main/Factory.cpp

ALSAWrapper.o: AudioPlayer/ALSAWrapper/ALSAWrapper.cpp AudioPlayer/ALSAWrapper/ALSAWrapper.h \
		AudioPlayer/WaveReader.h \
		AudioPlayer/IFFileFormat.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ALSAWrapper.o AudioPlayer/ALSAWrapper/ALSAWrapper.cpp

DeviceInfo.o: AudioPlayer/DeviceInfo.cpp AudioPlayer/DeviceInfo.h \
		AudioPlayer/ALSAWrapper/ALSAWrapper.h \
		AudioPlayer/WaveReader.h \
		AudioPlayer/IFFileFormat.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DeviceInfo.o AudioPlayer/DeviceInfo.cpp

AudioPlayer.o: AudioPlayer/AudioPlayer.cpp AudioPlayer/AudioPlayer.h \
		GUI/mainwindow.h \
		AudioPlayer/ALSAWrapper/ALSAWrapper.h \
		AudioPlayer/WaveReader.h \
		AudioPlayer/IFFileFormat.h \
		AudioPlayer/AudioFormats/DecoderBase.h \
		AudioPlayer/FormatRecognizer.h \
		AudioPlayer/MP3Reader.h \
		AudioPlayer/AudioFormats/Mp3Decoder.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o AudioPlayer.o AudioPlayer/AudioPlayer.cpp

Mp3Decoder.o: AudioPlayer/AudioFormats/Mp3Decoder.cpp AudioPlayer/AudioFormats/Mp3Decoder.h \
		AudioPlayer/AudioFormats/DecoderBase.h \
		AudioPlayer/ALSAWrapper/ALSAWrapper.h \
		AudioPlayer/WaveReader.h \
		AudioPlayer/IFFileFormat.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o Mp3Decoder.o AudioPlayer/AudioFormats/Mp3Decoder.cpp

FormatRecognizer.o: AudioPlayer/FormatRecognizer.cpp AudioPlayer/FormatRecognizer.h \
		AudioPlayer/IFFileFormat.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o FormatRecognizer.o AudioPlayer/FormatRecognizer.cpp

DecoderBase.o: AudioPlayer/DecoderBase.cpp AudioPlayer/AudioFormats/DecoderBase.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o DecoderBase.o AudioPlayer/DecoderBase.cpp

WaveReader.o: AudioPlayer/WaveReader.cpp AudioPlayer/WaveReader.h \
		AudioPlayer/IFFileFormat.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o WaveReader.o AudioPlayer/WaveReader.cpp

MP3Reader.o: AudioPlayer/MP3Reader.cpp AudioPlayer/MP3Reader.h \
		AudioPlayer/IFFileFormat.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o MP3Reader.o AudioPlayer/MP3Reader.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_DeviceInfo.o: moc_DeviceInfo.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_DeviceInfo.o moc_DeviceInfo.cpp

moc_AudioPlayer.o: moc_AudioPlayer.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_AudioPlayer.o moc_AudioPlayer.cpp

moc_Factory.o: moc_Factory.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_Factory.o moc_Factory.cpp

moc_ALSAWrapper.o: moc_ALSAWrapper.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_ALSAWrapper.o moc_ALSAWrapper.cpp

moc_DecoderBase.o: moc_DecoderBase.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_DecoderBase.o moc_DecoderBase.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

